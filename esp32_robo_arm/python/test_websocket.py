#!/usr/bin/env python3
"""
–¢–µ—Å—Ç WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
"""

import asyncio
import websockets
import json

async def test_websocket():
    """–¢–µ—Å—Ç WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    try:
        uri = "ws://localhost:8000/ws"
        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {uri}...")
        
        async with websockets.connect(uri) as websocket:
            print("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            await websocket.send(json.dumps({"command": "get_status"}))
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ get_status")
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            response = await websocket.recv()
            data = json.loads(response)
            print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {data}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–æ–±–æ—Ç—É
            await websocket.send(json.dumps({"command": "connect"}))
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ connect")
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            response = await websocket.recv()
            data = json.loads(response)
            print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {data}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")

if __name__ == "__main__":
    asyncio.run(test_websocket())
