#!/usr/bin/env python3
"""
Debug Test: File Saving Issue
–¢–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞
"""

import asyncio
import sys
import os
import json
from datetime import datetime
from dataclasses import asdict

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–ª–∞—Å—Å–∞–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'classes'))

from enhanced_calibrate import EnhancedMotorCalibrator

async def debug_file_saving():
    """–û—Ç–ª–∞–¥–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
    
    print("üîç Debug: File Saving Issue")
    print("=" * 40)
    
    calibrator = EnhancedMotorCalibrator(
        robot_id="esp32_robot_arm_001",
        use_api=False,  # –¢–æ–ª—å–∫–æ —Ñ–∞–π–ª
        fallback_to_file=True
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
    start_position = {
        0: 0.0,  # –ú–æ—Ç–æ—Ä 0 –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        1: 0.0,  # –ú–æ—Ç–æ—Ä 1 –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏  
        2: 0.0   # –ú–æ—Ç–æ—Ä 2 –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
    }
    
    from classes.data_storage_manager import RobotPosition
    position = RobotPosition(
        timestamp=datetime.now().isoformat(),
        motor_positions=start_position,
        position_name="calibration_start"
    )
    
    print(f"Created position: {asdict(position)}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    print("Saving to file...")
    await calibrator._save_position_to_file(position)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
    position_file = os.path.join(
        os.path.dirname(__file__), "data", "robot_data_position.json"
    )
    
    print(f"Checking file: {position_file}")
    
    if os.path.exists(position_file):
        with open(position_file, 'r') as f:
            data = json.load(f)
        print(f"File contents: {data}")
        
        if data['position_name'] == 'calibration_start':
            print("‚úÖ File saved correctly!")
        else:
            print(f"‚ùå File has wrong position_name: {data['position_name']}")
    else:
        print("‚ùå File not found!")

if __name__ == "__main__":
    asyncio.run(debug_file_saving())
